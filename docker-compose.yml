version: '3.8'

services:
  api1:
    build:
      context: .
      dockerfile: OrderAPI/Dockerfile
    ports:
      - "5000:80"
    environment:
      - ConnectionStrings__DefaultConnection=Server=db1;Database=OrderServiceDB;User Id=postgres;Password=postgres;
    depends_on:
      - db1
      - api2
            

  api2:
    build:
      context: .
      dockerfile: ProductAPI/Dockerfile
    ports:
      - "5001:81"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=db2;Database=ProductServiceDB;User Id=postgres;Password=postgres;
    depends_on:
      - db2

  db1:
    image: postgres:17
    environment:
      POSTGRES_DB: OrderServiceDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata1:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  db2:
    image: postgres:17
    environment:
      POSTGRES_DB: ProductServiceDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - pgdata2:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata1:
  pgdata2: